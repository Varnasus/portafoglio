{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\r\n\r\nexport const Post = defineDocumentType(() => ({\r\n  name: 'Post',\r\n  filePathPattern: `posts/**/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n    date: {\r\n      type: 'date',\r\n      required: true,\r\n    },\r\n    published: {\r\n      type: 'boolean',\r\n      default: true,\r\n    },\r\n    image: {\r\n      type: 'string',\r\n      required: false,\r\n    },\r\n    authors: {\r\n      type: 'list',\r\n      of: { type: 'string' },\r\n      default: ['Zach Varney'],\r\n    },\r\n    tags: {\r\n      type: 'list',\r\n      of: { type: 'string' },\r\n      default: [],\r\n    },\r\n  },\r\n  computedFields: {\r\n    slug: {\r\n      type: 'string',\r\n      resolve: (post) => post._raw.flattenedPath.replace('posts/', ''),\r\n    },\r\n    url: {\r\n      type: 'string',\r\n      resolve: (post) => `/blog/${post._raw.flattenedPath.replace('posts/', '')}`,\r\n    },\r\n  },\r\n}))\r\n\r\nexport const CaseStudy = defineDocumentType(() => ({\r\n  name: 'CaseStudy',\r\n  filePathPattern: `case-studies/**/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n    date: {\r\n      type: 'date',\r\n      required: true,\r\n    },\r\n    published: {\r\n      type: 'boolean',\r\n      default: true,\r\n    },\r\n    image: {\r\n      type: 'string',\r\n      required: false,\r\n    },\r\n    role: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n    company: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n    timeline: {\r\n      type: 'string',\r\n      required: true,\r\n    },\r\n    teamSize: {\r\n      type: 'string',\r\n      required: false,\r\n    },\r\n    metrics: {\r\n      type: 'list',\r\n      of: { type: 'string' },\r\n      default: [],\r\n    },\r\n    technologies: {\r\n      type: 'list',\r\n      of: { type: 'string' },\r\n      default: [],\r\n    },\r\n    tags: {\r\n      type: 'list',\r\n      of: { type: 'string' },\r\n      default: [],\r\n    },\r\n  },\r\n  computedFields: {\r\n    slug: {\r\n      type: 'string',\r\n      resolve: (caseStudy) => caseStudy._raw.flattenedPath.replace('case-studies/', ''),\r\n    },\r\n    url: {\r\n      type: 'string',\r\n      resolve: (caseStudy) => `/case-studies/${caseStudy._raw.flattenedPath.replace('case-studies/', '')}`,\r\n    },\r\n  },\r\n}))\r\n\r\nexport default makeSource({\r\n  contentDirPath: 'content',\r\n  documentTypes: [Post, CaseStudy],\r\n}) "],
  "mappings": "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",
  "names": []
}
